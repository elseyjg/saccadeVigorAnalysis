function [saccVigor] = saccadeVigor4Opt4Att(allTOD,FixDuration,FixAttributeMagnitude,whichAttribute,allResp,allStimulusOnset,subjID, dataPath, figurePath, resultsPath, statsPath, iSaccAmp, iPeakVel, saccAmp, saccDur, peakVel)
%CREATEFIT(ISACCAMP,PEAKVEL)
%  Create a fit.
%
%  Data for 'untitled fit 1' fit:
%      X Input : iSaccAmp
%      Y Output: peakVel
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 19-Nov-2019 13:04:32


if iscell(allTOD)
    allTOD = convToMat(allTOD);
end

if iscell(FixDuration)
    FixDuration = convToMat(FixDuration);
end

if iscell(FixAttributeMagnitude)
    FixAttributeMagnitude = convToMat(FixAttributeMagnitude);
end

if iscell(whichAttribute)
    whichAttribute = convToMat(whichAttribute);
end

if iscell(allResp)
    allResp = convToMat(allResp);
end

if iscell(allStimulusOnset)
    allStimulusOnset = convToMat(allStimulusOnset);
end

if iscell(iSaccAmp)
    iSaccAmp = convToMat(iSaccAmp);
end

if iscell(iPeakVel)
    iPeakVel = convToMat(iPeakVel);
end

if iscell(saccAmp)
    saccAmp = convToMat(saccAmp);
end

if iscell(saccDur)
    saccDur = convToMat(saccDur);
end

if iscell(peakVel)
    peakVel = convToMat(peakVel);
end

plotflag = true;
taskType = '4Opt4Att';

%% Fit: 'untitled fit 1'.

[xData, yData] = prepareCurveData( iSaccAmp, iPeakVel );

% Set up fittype and options.
ft = fittype( 'a*(1-exp(-x/c))', 'independent', 'x', 'dependent', 'y' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.StartPoint = [523 6.8];

% Fit model to data.
[fitresult, gof] = fit( xData, yData, ft, opts );
xval = min(xData):0.1:max(xData); 
ci = predint(fitresult,xval,0.95,'observation','off');


% Plot fit with data.
figure('Color',[1 1 1],'Position',[1650 -50 1200 900])

% figure( 'Name', 'untitled fit 1' );
h = plot( fitresult, xData, yData );
hold on        
plot(xval,ci,'k--')
legend( h, 'peakVel vs. iSaccAmp', 'fit', 'Location', 'NorthEast', 'Interpreter', 'none' );
% Label axes
xlabel( 'iSaccAmp', 'Interpreter', 'none' );
ylabel( 'peakVel', 'Interpreter', 'none' );
grid on

saccVigor.fitresult = fitresult;
saccVigor.gof = gof;

%% Save fig
figureFolder = 'saccadeVigor';
figureHandle = gcf;
figure(figureHandle);
annotation('textbox','string',['Subject ', subjID, ' Saccade Vigor Main Sequence ',taskType] ...
    ,'position',[0.1,0.92,1,0.1],'fontsize',14 ...
    ,'fontweight','bold','linestyle','none')
% annotation('textbox','string',['CHOOSE DELAY+ OPTION \n Mean # Fixations = ', num2str(fixNumNonDomDelayOptChosenMean)] ...
%     ,'position',[0.1,0.01,1,0.1],'fontsize',14 ...
%     ,'fontweight','bold','linestyle','none')
orient landscape
set(gcf,'units','pixels' ...
    ,'units','inches'...
    ,'PaperType','usletter' ...
    ,'paperposition',[.25   .25   10.5  8])

    print(fullfile(figurePath, figureFolder,['Subject ', subjID, ' Sacc Vigor MS ', taskType,'.pdf']),'-dpdf','-r300')

close all


%% Sort vigor values by transition types
[figureHandle] = saccadeVigorTransitionType4Opt4Att(allTOD,FixDuration,FixAttributeMagnitude,whichAttribute,allResp,allStimulusOnset,subjID, dataPath, figurePath, resultsPath, statsPath, iSaccAmp, iPeakVel, saccAmp, saccDur, peakVel);



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
function [outMat]=convToMat(inCell)
nMaxFix = cell2mat(cellfun(@size,inCell,'uniformoutput',false));
nMaxFix = max(nMaxFix (:,2));
outMat =[];
for ii = 1:size(inCell,1)
    temp = inCell{ii,1};
    if ~isempty(temp) && size(temp,2)<nMaxFix
        temp(:,end+1:nMaxFix)=nan;
    end
    outMat=[outMat;temp];
end
